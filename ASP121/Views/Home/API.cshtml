@{
    ViewData["Title"] = "API";
}

<div>
    <h1 class="display-4">Web API</h1>
</div>

<p>
    <b>API</b> - Aplication Program Interface, інтерфейс взвємодії
    програми з додатками. Уданому контексті програма - це певний
    інформаційний центр. у якому зберігаються всі дані комплексу.
    Додаток (застосунок) - частна комплксу, яка оперує даними,
    частіше за все надає UI для взаємодії з людино або іншими системами.
    Інтерфейс - набір правил (протоколів) взаємодії (обніну даним).
</p>
<p>
    Web API - різовид API за якого обмін відбуваєьбся Інтернет-каналом
    за його протоколами (TCP/IP, HTTP, JSON/XML). Частіше за все
    передбачаються наступні принципи:
</p>
<ul>
    <li>
        Для вирішення певної задачі утворюється окремий ендпоїнт (endpoint),
        наприклад, /api/product, а різні можливості реалізуються шляхом
        надсилання запитів різними методами (GET, POST, ,,,)
    </li>
    <li>
        Головна відмінність View-контроллерів та API-контроллерів полягає
        у тому, що до View-контроллерів звертаються однаковими методами
        (GET, інколи POST) але до різних URL-адрес. тоді як доAPI-контроллерів
        звертаються багатьмя методами (GET, POST, PUT, DELETE, PATCH, ...)
        але до єдиного URL
    </li>
    <li>
        Існує традиція CRUD-повноти, за якою кожен ендпоїнт має забезпечити
        щонайменше 4 операції, тобто підтримувати звернення чотирма методами.
    </li>
    <li>
        Також традиційно формат обміну даними - це JSON
    </li>
    <li>
        Для випробування API створюються окремі сторінки, або використовуються
        спеціалізовани програми на кшталт Postman, або пакети на кшталт
        Swagger
    </li>
</ul>
<p>
    <button onclick="getClick()"class="btn btn-outline-primary">GET</button>
    <button onclick="postClick()"class="btn btn-outline-warning">POST</button>
    <button onclick="putClick()"class="btn btn-outline-secondary">PUT</button>
    <button onclick="deleteClick()"class="btn btn-outline-danger">DELETE</button>
    <br/>
    <span id="outspan"></span>
</p>
<script>
    function deleteClick() {
        window
            .fetch("/api/test/a12-d45-533", {
                method: "DELETE"                
            })
            .then(r => r.json())
            .then(j => {
                window.outspan.innerText = JSON.stringify(j);
            });
    }

    function putClick() {
        window
            .fetch("/api/test", {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify( { login: "The-Login", password: "123" } )
            })
            .then(r => r.json())
            .then(j => {
                window.outspan.innerText = j.status;
            });
    }

    function getClick()
    {
        window
            .fetch("/api/test")
            .then(r => r.json())
            .then(j => {
                window.outspan.innerText = j.status;
            });
    }

    function postClick() {
        window
            .fetch("/api/test", {
                method: "POST"
            })
            .then(r => r.json())
            .then(j => {
                window.outspan.innerText = j.status;
            });
    }
</script>
